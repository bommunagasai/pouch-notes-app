{"mappings":"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","sources":["src/containers/Update.js"],"sourcesContent":["import React, { useReducer, useEffect, Suspense } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { withSizes } from 'react-sizes'\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nimport StoreManager from '../services/StoreManager'\r\n\r\nimport { Container, Row, Col, SheetContainer, SpinLoader } from '@ds.crisp/react-components'\r\nimport PlateEditor from '../components/Editor'\r\n\r\nimport Splash from './Splash'\r\nimport CreateNoteForm from '../components/CreateNoteForm'\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  _id: null,\r\n  doc: [],\r\n  readOnly: true,\r\n  dialog: { show: false },\r\n  updateContent: [],\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'loaded':\r\n      const { doc, _id } = action.payload\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        doc,\r\n        _id,\r\n      }\r\n    case 'unlock_editor':\r\n      return { ...state, readOnly: false }\r\n    case 'save_to_db_init':\r\n      return {\r\n        ...state,\r\n        updateContent: action.payload,\r\n        dialog: { ...state.dialog, show: true },\r\n      }\r\n    case 'close_create_form':\r\n      return {\r\n        ...state,\r\n        dialog: { ...state.dialog, show: false },\r\n      }\r\n    default:\r\n      return new Error('Unkown action type')\r\n  }\r\n}\r\n\r\nconst Update = ({\r\n  isMobile\r\n}) => {\r\n  const { noteId } = useParams()\r\n  const db = new StoreManager('NOTE_DB')\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    getNote(noteId)\r\n  }, [])\r\n\r\n  const getNote = async (noteId) => {\r\n    try {\r\n      await db.createOrFindDB()\r\n      const noteDetails = await db.getNote(noteId)\r\n\r\n      dispatch({\r\n        type: 'loaded',\r\n        payload: {\r\n          _id: noteId,\r\n          doc: noteDetails?.docs,\r\n        },\r\n      })\r\n    } catch (err) {\r\n      console.log(err)\r\n      dispatch({ type: 'db_init_failed' })\r\n    }\r\n  }\r\n\r\n  const openUpdateForm = async (content) => {\r\n    dispatch({ type: 'save_to_db_init', payload: content })\r\n  }\r\n\r\n  const saveToDb = async (formData) => {\r\n    const { metaTitle, metaDescription, theme, type } = formData\r\n    dispatch({ type: 'close_create_form' })\r\n    try {\r\n      await db.updateNote({\r\n        _id: state._id,\r\n        _rev: state?.doc?.[0]?._rev,\r\n        content: state.updateContent,\r\n        metaTitle,\r\n        metaDescription,\r\n        theme,\r\n        type,\r\n      })\r\n      navigate('/')\r\n    } catch (err) {\r\n      console.log(err)\r\n      dispatch({ type: 'save_to_db_failed' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          {state.loading ? (\r\n            <Splash />\r\n          ) : state.doc?.length ? (\r\n            <>\r\n              <Suspense fallback={<SpinLoader/>}>\r\n                <PlateEditor\r\n                  id={uuid()}\r\n                  isMobile={isMobile}\r\n                  readOnly={state.readOnly}\r\n                  value={state?.doc?.[0]?.content}\r\n                  onUnlock={() => dispatch({ type: 'unlock_editor' })}\r\n                  onSave={openUpdateForm}\r\n                  goBack={() => navigate('/')}\r\n                />\r\n              </Suspense>\r\n              <SheetContainer show={state.dialog.show} bottom>\r\n                {state.dialog.show && (\r\n                  <CreateNoteForm\r\n                    title=\"Update Notes\"\r\n                    hint=\"Would be usefull for search\"\r\n                    formData={{\r\n                      metaTitle: state?.doc?.[0]?.metaTitle,\r\n                      metaDescription: state?.doc?.[0]?.metaDescription,\r\n                      theme: state?.doc?.[0]?.theme,\r\n                      type: state?.doc?.[0]?.type,\r\n                    }}\r\n                    onCancel={() => dispatch({ type: 'close_create_form' })}\r\n                    onSubmit={(formData) => saveToDb(formData)}\r\n                  />\r\n                )}\r\n              </SheetContainer>\r\n            </>\r\n          ) : (\r\n            <p>Not Foun</p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withSizes(({ width }) => ({ isMobile: width <= 576 }))(Update)\r\n"],"names":["$6beb885ed9f3d62d$var$initialState","loading","_id","doc","readOnly","dialog","show","updateContent","$6beb885ed9f3d62d$var$reducer","state","action","type","payload","Error","$6beb885ed9f3d62d$export$2e2bcd8739ae039","$jPO5J","withSizes","width","isMobile","ref12","ref1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","ref10","noteId","noteId1","$iZr1d","useParams","db","$8Mxml","default","dispatch","$fd2wl","useReducer","navigate","useNavigate","useEffect","getNote","async","createOrFindDB","noteDetails","docs","err","console","log","$k8UWl","jsx","$9qkK4","Container","Row","Col","$aFpcj","length","jsxs","Fragment","Suspense","fallback","SpinLoader","$iVzkL","id","$bo4iJ","v1","value","content","onUnlock","onSave","goBack","SheetContainer","bottom","$hdAu4","title","hint","formData","metaTitle","metaDescription","theme","onCancel","onSubmit","ref","ref11","updateNote","_rev","saveToDb"],"version":3,"file":"Update.d637d882.js.map"}